@model TourBookingPageViewModel
@using System
@using System.Collections.Generic
@using System.Linq
@using Models.Helper
@using Models.Entities

@{
    var tour = Model.Tour;
    var form = Model.Form ?? new TourReservationInputModel();
    form.Language ??= tour.LanguageUsed;
    var paymentOptions = Model.PaymentOptions ?? Array.Empty<PaymentOptionDto>();
    var accommodationOptions = Model.AccommodationOptions ?? Array.Empty<string>();

    Func<string?, string> resolvePhoto = path =>
    {
        if (string.IsNullOrWhiteSpace(path))
        {
            return string.Empty;
        }

        return path.StartsWith("http", StringComparison.OrdinalIgnoreCase)
            ? path
            : Url.Content(path);
    };

    var gallery = new List<string>();
    var seen = new HashSet<string>(StringComparer.OrdinalIgnoreCase);

    void AddPhoto(string? path)
    {
        var resolved = resolvePhoto(path);
        if (string.IsNullOrWhiteSpace(resolved))
        {
            return;
        }

        if (seen.Add(resolved))
        {
            gallery.Add(resolved);
        }
    }

    AddPhoto(tour.Foto);
    if (tour.Fotos != null)
    {
        foreach (var foto in tour.Fotos)
        {
            AddPhoto(foto);
        }
    }

    var heroPhotoUrl = gallery.FirstOrDefault() ?? Url.Content("~/image/about_banner.jpg");
    var activeDayNames = DayMaskHelper
        .ToSelectedDays(tour.ActiveDay)
        .Select(index => DayMaskHelper.Options.FirstOrDefault(o => o.Index == index)?.DisplayName ?? $"Day {index + 1}")
        .ToList();

    var services = tour.Services ?? new List<string>();
    var languageLabel = string.IsNullOrWhiteSpace(tour.LanguageUsed)
        ? "EN"
        : tour.LanguageUsed.ToUpperInvariant();
    var hasCoordinates = Math.Abs(tour.LocLat) > 0.001 || Math.Abs(tour.LocLon) > 0.001;
    var estimatedTotal = Math.Max(0, form.Adults) * tour.Price
        + Math.Max(0, form.Children) * tour.KinderPrice
        + Math.Max(0, form.Infants) * tour.InfantPrice;
}

<section class="tour-hero d-flex align-items-end" style="background-image:url('@heroPhotoUrl'); background-size:cover; background-position:center; min-height:360px;">
    <div class="w-100" style="background:rgba(0, 0, 0, 0.55);">
        <div class="container py-5 text-white">
            <div class="row align-items-end">
                <div class="col-lg-8">
                    <span class="badge badge-pill badge-light text-uppercase mb-3">@tour.CategoryString</span>
                    <h1 class="display-4">@tour.TourName</h1>
                    <p class="lead mb-0">@tour.MiniDescription</p>
                </div>
                <div class="col-lg-4 text-lg-right mt-4 mt-lg-0">
                    <div class="d-inline-block px-4 py-3 bg-white text-dark rounded shadow">
                        <div class="h5 mb-1">Adult @tour.Price EUR</div>
                        <div>Child @tour.KinderPrice EUR</div>
                        <div>Infant @tour.InfantPrice EUR</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="tour-overview section_gap">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mb-5 mb-lg-0">
                <div class="mb-4">
                    <h2 class="mb-3">Tour Overview</h2>
                    <p>@tour.Description</p>
                </div>

                <div class="row mb-4">
                    <div class="col-md-4 mb-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <h5 class="card-title">Duration</h5>
                                <p class="card-text mb-0">@tour.DurationHours hour(s)</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <h5 class="card-title">Available Days</h5>
                                @if (activeDayNames.Any())
                                {
                                    <p class="card-text mb-0">
                                        @string.Join(", ", activeDayNames)
                                    </p>
                                }
                                else
                                {
                                    <p class="card-text mb-0">Schedule on request</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <h5 class="card-title">Meeting Point</h5>
                                @if (hasCoordinates)
                                {
                                    <p class="card-text mb-0">Latitude @tour.LocLat, Longitude @tour.LocLon</p>
                                }
                                else
                                {
                                    <p class="card-text mb-0">Details provided after booking</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                @if (services.Any())
                {
                    <div class="mb-5">
                        <h3 class="mb-3">What's Included</h3>
                        <ul class="list_style">
                            @foreach (var service in services)
                            {
                                <li>@service</li>
                            }
                        </ul>
                    </div>
                }

                @if (gallery.Count > 1)
                {
                    <div class="mb-4">
                        <h3 class="mb-3">Gallery</h3>
                        <div class="row">
                            @foreach (var image in gallery.Skip(1))
                            {
                                <div class="col-md-6 mb-3">
                                    <img src="@image" class="img-fluid rounded shadow-sm" alt="Photo from @tour.TourName">
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="col-lg-4">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body">
                        <h4 class="card-title">Need to know</h4>
                        <ul class="list_style">
                            <li>Category: @tour.CategoryString</li>
                            <li>Language: @languageLabel</li>
                            @if (activeDayNames.Any())
                            {
                                <li>Operates: @string.Join(", ", activeDayNames)</li>
                            }
                            <li>Duration: @tour.DurationHours hour(s)</li>
                        </ul>
                        <a href="@Url.Action("Category", "Home", new { category = tour.Category })" class="btn theme_btn button_hover btn-block">More @tour.CategoryString Tours</a>
                    </div>
                </div>

                <div class="card border-0 shadow-sm booking-card">
                    <div class="card-body">
                        <h4 class="card-title">Reserve your tour</h4>
                        <p class="text-muted small mb-4">Complete the three quick steps to secure your seats and receive payment instructions.</p>

                        <style>
                            .booking-card .booking-progress {
                                gap: 0.5rem;
                                border: 1px solid #e8e8e8;
                                border-radius: 50px;
                                padding: 0.4rem 0.6rem;
                                background: #fafafa;
                            }
                            .booking-card .booking-progress-step {
                                display: flex;
                                align-items: center;
                                font-weight: 600;
                                font-size: 0.9rem;
                            }
                            .booking-card .booking-progress-step .badge {
                                width: 28px;
                                height: 28px;
                                display: inline-flex;
                                align-items: center;
                                justify-content: center;
                                font-size: 0.85rem;
                            }
                            .booking-card .booking-step {
                                transition: opacity 0.25s ease-in-out;
                            }
                            .booking-card .booking-step.d-none {
                                opacity: 0;
                                height: 0;
                                overflow: hidden;
                            }
                        </style>

                        @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger" role="alert">@Model.ErrorMessage</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.SuccessMessage))
                        {
                            <div class="alert alert-success" role="alert">@Model.SuccessMessage</div>
                        }

                        <form asp-action="BookTour"
                              method="post"
                              novalidate
                              class="booking-form"
                              data-tour-id="@tour.Id"
                              data-tour-name="@tour.TourName"
                              data-adult-price="@tour.Price"
                              data-child-price="@tour.KinderPrice"
                              data-infant-price="@tour.InfantPrice"
                              data-paypal-enabled="@Model.PayPal.Enabled.ToString().ToLowerInvariant()"
                              data-paypal-base-url="@Model.PayPal.BaseUrl"
                              data-paypal-email="@Model.PayPal.BusinessEmail"
                              data-paypal-currency="@Model.PayPal.Currency"
                              data-paypal-return="@Model.PayPal.ReturnUrl"
                              data-paypal-cancel="@Model.PayPal.CancelUrl">
                            @Html.AntiForgeryToken()
                            <input type="hidden" asp-for="Form.TourId" />
                            <input type="hidden" asp-for="Form.Language" />

                            <div asp-validation-summary="ModelOnly" class="text-danger small mb-3"></div>

                            <div class="booking-progress d-flex justify-content-between mb-4">
                                <div class="booking-progress-step" data-step-index="0">
                                    <span class="badge badge-pill badge-primary mr-2">1</span> Guests
                                </div>
                                <div class="booking-progress-step text-muted" data-step-index="1">
                                    <span class="badge badge-pill badge-secondary mr-2">2</span> Traveller details
                                </div>
                                <div class="booking-progress-step text-muted" data-step-index="2">
                                    <span class="badge badge-pill badge-secondary mr-2">3</span> Payment
                                </div>
                            </div>

                            <div class="booking-step" data-step="0">
                                <div class="form-group">
                                    <label asp-for="Form.PreferredDate">Choose your tour date</label>
                                    <input asp-for="Form.PreferredDate" type="date" class="form-control" />
                                    <small class="form-text text-muted">Pick your preferred day or leave empty if travel dates are flexible.</small>
                                    <span asp-validation-for="Form.PreferredDate" class="text-danger small"></span>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                    <label asp-for="Form.Adults"></label>
                                    <input asp-for="Form.Adults" type="number" class="form-control" min="1" placeholder="Adults" />
                                        <small class="form-text text-muted">Enter number of guests aged 12+</small>
                                        <span asp-validation-for="Form.Adults" class="text-danger small"></span>
                                    </div>
                                    <div class="form-group col-md-4">
                                    <label asp-for="Form.Children"></label>
                                    <input asp-for="Form.Children" type="number" class="form-control" min="0" placeholder="Children" />
                                        <small class="form-text text-muted">Guests aged 3–11</small>
                                        <span asp-validation-for="Form.Children" class="text-danger small"></span>
                                    </div>
                                    <div class="form-group col-md-4">
                                    <label asp-for="Form.Infants"></label>
                                    <input asp-for="Form.Infants" type="number" class="form-control" min="0" placeholder="Infants" />
                                        <small class="form-text text-muted">Guests under 3</small>
                                        <span asp-validation-for="Form.Infants" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="alert alert-light border mt-3" id="reservation-summary">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="mb-0">Estimated total for your group</span>
                                        <strong class="h5 mb-0">€<span id="reservation-total-value">@estimatedTotal</span></strong>
                                    </div>
                                    <small class="text-muted d-block" id="reservation-total-hint">Add guests to see your estimated total.</small>
                                </div>

                                <button type="button" class="btn theme_btn button_hover btn-block mt-3" data-next-step>Continue</button>
                            </div>

                            <div class="booking-step d-none" data-step="1">
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label asp-for="Form.FirstName"></label>
                                        <input asp-for="Form.FirstName" class="form-control" placeholder="Traveler’s first name" />
                                        <span asp-validation-for="Form.FirstName" class="text-danger small"></span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label asp-for="Form.LastName"></label>
                                        <input asp-for="Form.LastName" class="form-control" placeholder="Traveler’s last name" />
                                        <span asp-validation-for="Form.LastName" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Form.CustomerEmail"></label>
                                    <input asp-for="Form.CustomerEmail" class="form-control" placeholder="Confirmation email" />
                                    <span asp-validation-for="Form.CustomerEmail" class="text-danger small"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Form.CustomerPhone"></label>
                                    <input asp-for="Form.CustomerPhone" class="form-control" placeholder="WhatsApp or mobile (e.g. +90 555 123 45 67)" />
                                    <span asp-validation-for="Form.CustomerPhone" class="text-danger small"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Form.HotelName">Hotel or accommodation</label>
                                    <input asp-for="Form.HotelName"
                                           class="form-control"
                                           id="hotelField"
                                           list="hotelList"
                                           placeholder="Start typing to search or pick from the list" />
                                    <datalist id="hotelList">
                                        @foreach (var option in accommodationOptions)
                                        {
                                            <option value="@option"></option>
                                        }
                                    </datalist>
                                    <small class="form-text text-muted">Type a few letters to find your hotel or pick from the suggestions.</small>
                                    <span asp-validation-for="Form.HotelName" class="text-danger small"></span>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label asp-for="Form.RoomNumber"></label>
                                        <input asp-for="Form.RoomNumber" class="form-control" placeholder="Room number (optional)" />
                                        <span asp-validation-for="Form.RoomNumber" class="text-danger small"></span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label asp-for="Form.PickupLocation">Extra pickup notes</label>
                                        <input asp-for="Form.PickupLocation" class="form-control" placeholder="Lobby meeting time or alternate pickup" />
                                        <span asp-validation-for="Form.PickupLocation" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between">
                                    <button type="button" class="btn btn-outline-secondary" data-prev-step>Back</button>
                                    <button type="button" class="btn theme_btn button_hover" data-next-step>Continue</button>
                                </div>
                            </div>

                            <div class="booking-step d-none" data-step="2">
                                <div class="form-group mb-3">
                                    <label class="d-block">Payment method</label>
                                    @if (paymentOptions.Any())
                                    {
                                        foreach (var option in paymentOptions)
                                        {
                                            var paymentId = $"payment-{option.Method}";
                                            <div class="custom-control custom-radio mb-2">
                                                <input class="custom-control-input" type="radio" id="@paymentId" name="Form.PaymentMethod" value="@option.Method" @(form.PaymentMethod == option.Method ? "checked" : null) />
                                                <label class="custom-control-label" for="@paymentId">
                                                    <strong>@option.DisplayName</strong>
                                                    <span class="d-block small text-muted">@option.AccountIdentifier</span>
                                                </label>
                                                <p class="small text-muted mt-1 mb-0">@option.Instructions</p>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="small text-muted">Payment methods will be provided after booking confirmation.</p>
                                    }
                                    <span asp-validation-for="Form.PaymentMethod" class="text-danger small"></span>
                                </div>

                                @if (Model.PayPal.Enabled)
                                {
                                    <div class="alert alert-info" id="paypalCheckoutContainer" style="display:none;">
                                        <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between">
                                            <div class="mr-md-3 mb-2 mb-md-0">
                                                <strong>Instant PayPal checkout</strong>
                                                <p class="small mb-0">Use PayPal for immediate confirmation once you review the amount.</p>
                                            </div>
                                            <a id="paypalCheckoutButton" class="btn btn-warning" target="_blank" rel="noopener">Pay with PayPal</a>
                                        </div>
                                    </div>
                                }

                                <div class="form-group">
                                    <label asp-for="Form.PaymentReference"></label>
                                    <input asp-for="Form.PaymentReference" class="form-control" placeholder="Optional payment reference" />
                                    <span asp-validation-for="Form.PaymentReference" class="text-danger small"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Form.Notes"></label>
                                    <textarea asp-for="Form.Notes" class="form-control" rows="3" placeholder="Special requests or questions"></textarea>
                                    <span asp-validation-for="Form.Notes" class="text-danger small"></span>
                                </div>

                                <div class="d-flex justify-content-between align-items-center mt-4">
                                    <button type="button" class="btn btn-outline-secondary" data-prev-step>Back</button>
                                    <button type="submit" class="btn theme_btn button_hover px-4">Reserve now</button>
                                </div>
                            </div>
                        </form>

                        <hr class="my-4" />
                        <p class="small mb-1">Prefer to talk?</p>
                        <a href="mailto:info@tourantalya.com" class="btn btn-outline-primary btn-block">Email us</a>
                        <a href="tel:+905013411029" class="btn btn-outline-secondary btn-block mt-2">Call +90 (501) 341 10 29</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        (function () {
            const form = document.querySelector('.booking-form');
            if (!form) {
                return;
            }

            const steps = Array.from(form.querySelectorAll('.booking-step'));
            const progressSteps = Array.from(form.querySelectorAll('.booking-progress-step'));
            const nextButtons = Array.from(form.querySelectorAll('[data-next-step]'));
            const prevButtons = Array.from(form.querySelectorAll('[data-prev-step]'));
            let currentStep = 0;

            const totalValue = document.getElementById('reservation-total-value');
            const totalHint = document.getElementById('reservation-total-hint');
            const adultInput = form.querySelector('[name="Form.Adults"]');
            const childInput = form.querySelector('[name="Form.Children"]');
            const infantInput = form.querySelector('[name="Form.Infants"]');
            const payPalEnabled = form.dataset.paypalEnabled === 'true';
            const payPalButton = document.getElementById('paypalCheckoutButton');
            const payPalContainer = document.getElementById('paypalCheckoutContainer');
            const paymentRadios = Array.from(form.querySelectorAll('input[name="Form.PaymentMethod"]'));

            const adultPrice = parseInt(form.dataset.adultPrice ?? '0', 10);
            const childPrice = parseInt(form.dataset.childPrice ?? '0', 10);
            const infantPrice = parseInt(form.dataset.infantPrice ?? '0', 10);
            const payPalBaseUrl = form.dataset.paypalBaseUrl ?? '';
            const payPalEmail = form.dataset.paypalEmail ?? '';
            const payPalCurrency = form.dataset.paypalCurrency ?? 'EUR';
            const payPalReturn = form.dataset.paypalReturn ?? '';
            const payPalCancel = form.dataset.paypalCancel ?? '';
            const tourName = form.dataset.tourName ?? 'Tour Reservation';
            const tourId = form.dataset.tourId ?? '0';

            const togglePayPalVisibility = () => {
                if (!payPalContainer) {
                    return;
                }
                const selected = paymentRadios.find(r => r.checked)?.value;
                if (selected === 'PayPal' && payPalEnabled) {
                    payPalContainer.style.display = '';
                } else {
                    payPalContainer.style.display = 'none';
                }
            };

            const valueOf = (input) => {
                if (!input) return 0;
                const raw = (input.value ?? '').toString().replace(',', '.');
                const parsed = Number(raw);
                return Number.isFinite(parsed) ? parsed : 0;
            };

            const updateTotal = () => {
                const adults = Math.max(0, valueOf(adultInput));
                const children = Math.max(0, valueOf(childInput));
                const infants = Math.max(0, valueOf(infantInput));
                const total = adults * adultPrice + children * childPrice + infants * infantPrice;
                if (totalValue) {
                    totalValue.textContent = total.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 });
                }
                if (totalHint) {
                    totalHint.textContent = total > 0
                        ? 'Proceed to payment to receive confirmation details in your inbox.'
                        : 'Add guests to see your estimated total.';
                }

                if (payPalEnabled && payPalButton) {
                    if (total > 0 && payPalEmail) {
                        const amount = (total || 0).toFixed(2);
                        const params = new URLSearchParams({
                            cmd: '_xclick',
                            business: payPalEmail,
                            currency_code: payPalCurrency,
                            amount,
                            item_name: tourName,
                            invoice: `TA-${tourId}-${Date.now()}`
                        });
                        if (payPalReturn) {
                            params.set('return', payPalReturn);
                        }
                        if (payPalCancel) {
                            params.set('cancel_return', payPalCancel);
                        }
                        payPalButton.href = `${payPalBaseUrl}?${params.toString()}`;
                        payPalButton.classList.remove('disabled');
                        payPalButton.setAttribute('aria-disabled', 'false');
                        if (payPalContainer) {
                            payPalContainer.style.display = '';
                        }
                    }
                    else {
                        payPalButton.href = '#';
                        payPalButton.classList.add('disabled');
                        payPalButton.setAttribute('aria-disabled', 'true');
                    }
                    togglePayPalVisibility();
                }
            };

            const setStep = (index) => {
                currentStep = Math.min(Math.max(index, 0), steps.length - 1);
                steps.forEach((step, idx) => {
                    if (idx === currentStep) {
                        step.classList.remove('d-none');
                    } else {
                        step.classList.add('d-none');
                    }
                });

                progressSteps.forEach((progressStep, idx) => {
                    const badge = progressStep.querySelector('.badge');
                    if (!badge) {
                        return;
                    }

                    if (idx < currentStep) {
                        progressStep.classList.remove('text-muted');
                        progressStep.classList.add('text-success');
                        badge.classList.remove('badge-secondary', 'badge-primary');
                        badge.classList.add('badge-success');
                    } else if (idx === currentStep) {
                        progressStep.classList.remove('text-muted', 'text-success');
                        badge.classList.remove('badge-secondary', 'badge-success');
                        badge.classList.add('badge-primary');
                    } else {
                        progressStep.classList.add('text-muted');
                        progressStep.classList.remove('text-success');
                        badge.classList.remove('badge-primary', 'badge-success');
                        badge.classList.add('badge-secondary');
                    }
                });
            };

            const validateStep = (index) => {
                const step = steps[index];
                if (!step) {
                    return true;
                }

                const fields = Array.from(step.querySelectorAll('input, select, textarea'))
                    .filter(el => !el.disabled && el.offsetParent !== null);

                for (const field of fields) {
                    if (!field.checkValidity()) {
                        field.reportValidity();
                        return false;
                    }
                }

                return true;
            };

            nextButtons.forEach(button => {
                button.addEventListener('click', () => {
                    if (validateStep(currentStep)) {
                        setStep(currentStep + 1);
                    }
                });
            });

            prevButtons.forEach(button => {
                button.addEventListener('click', () => {
                    setStep(currentStep - 1);
                });
            });

            [adultInput, childInput, infantInput].forEach(input => {
                if (!input) {
                    return;
                }
                ['change', 'keyup', 'input'].forEach(evt => input.addEventListener(evt, updateTotal));
            });

            paymentRadios.forEach(radio => radio.addEventListener('change', togglePayPalVisibility));

            setStep(0);
            updateTotal();
            togglePayPalVisibility();
        })();
    </script>
}
